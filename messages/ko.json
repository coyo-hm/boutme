{
  "locale": {
    "placeholder": "언어",
    "ko": "한국어",
    "en": "en"
  },
  "container": {
    "copyComplete": "클립보드에 이메일이 복사되었습니다."
  },
  "mainPage": {
    "position": "FRONTEND DEVELOPER",
    "nickname": "COYO",
    "greetings": "안녕하세요. FE 개발자 COYO입니다."
  },
  "overviewPage": {
    "overview": "소프트웨어 및 컴퓨터 공학을 전공한 후에 공유 오피스와 아파트 입출입 보안 서비스 관련 스타트업에서 2년 동안 프론트앤드 개발자로 근무하였습니다.",
    "section2": {
      "title": "FE 분야 뿐만 아니라 다양한 개발 분야를 깊이 있게 다져나가려고 노력하고 있습니다."
    },
    "section3": {
      "title": "<highlight>사용자의 관점에서 UI를 고려하며 개선</highlight>하는 것을 좋아합니다.",
      "text1": "개발 시에 주어진 화면만 그리는 것이 아닌 사용자 관점에서 개선되었으면 하는 것을 정리한 후 이를 논의해서 실제 서비스에 반영한 경험이 있습니다.",
      "text2": "블로그 포스트 리스트를 볼 때 무한 스크롤도 좋지만, 포스트가 점차 많아지면 끝없는 스크롤로 인해 피로감을 호소할 때가 있습니다. 이를 방지하고자 <a>개인 블로그</a>에서는 무한스크롤 대신 페이지네이션, 항상 떠 있는 목차와 더불어 바로 맨 위, 맨 아래로 이동하는 버튼을 추가하였습니다.",
      "text3": "코로나로 인해 비대면 강의를 진행하는 줌과 강의 공지를 위한 BlackBoard, 성적을 산출하는 학교 포탈 이 3가지 서비스를 오가며 불편했던 경험을 녹여 <a>DISBOARD</a>라는 화상회의를 더한 통합 LMS 플랫폼 프로젝트를 제작하였습니다."
    },
    "section4": {
      "title": "개발 과정 중에 불편함에 대해 <highlight>자동화하여 개선</highlight>하려고 노력하고 있습니다.",
      "text1": "git commit template과 commlint, semantice-release를 이용해서 <a>커밋 메세지를 규격화한 후 이를 이용해 SemVer 관리와 ChangeLog와 npm 배포를 자동화한 경험</a>이 있습니다.",
      "text2": "<a>NextJs Large Page Data Warning을 js script를 작성</a>하고 ",
      "text3": "<a>husky를 통해 자동화</a>하여 해결하였습니다."
    }
  },
  "skillsPage": {
    "react": {
      "text1": "실무에서 React를 이용해 설계부터 배포, VOC 대응까지 진행해본 경험이 있습니다.",
      "text2": "Redux, RTK, Recoil 등 다양한 상태 관리 라이브러리 사용 경험으로 비즈니스 로직에 맞는 적절한 상태관리를 사용할 수 있습니다.",
      "text3": "React 이외에도 NextJS와 Gatsby 등 다양한 프레임워크 사용 경험이 있습니다."
    },
    "javaScript": {
      "text1": "ES6 문법에 익숙합니다.",
      "text2": "node.js 환경에서 js를 이용해서 다양한 과제를 수행한 경험이 있습니다."
    },
    "typeScript": {
      "text1": "TypeScript를 사용해서 다양한 프로젝트를 진행하여 실제 서비스에 배포한 경험이 있습니다.",
      "text2": "JavaScript에서 TypeScript로 주도적으로 migration을 진행한 경험이 있습니다."
    },
    "css": {
      "text1": "css in js 와 css preprocessor 모두 사용 경험이 있으나 개인적으로 css preprocessor인 <scss>SCSS</scss>를 가장 선호합니다.",
      "text2": "<scss>SCSS</scss>의 @mixin, 함수, 조건 등 다양한 기능을 사용해 생산적으로 스타일 다룰 수 있습니다.",
      "text3": "<emotion>emotion</emotion>의 CSS Prop 와 StyleComponent 등 다양한 문법으로 사용할 수 있습니다.",
      "text4": "실무에서는 <scss>SCSS</scss>와 <styledComponent>styled-components</styledComponent>, <less>less</less>를 주로 사용하였습니다.",
      "text5": "블로그 등 다양한 개인 프로젝트에서는 <emotion>emotion</emotion>과 <tailwind>tailwind</tailwind>를 사용했습니다."
    }
  }
}